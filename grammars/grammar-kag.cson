name: "KAG Script File"
scopeName: "source.kag"
fileTypes: [
  "ks"
]
patterns: [
	{
		comment: "TJS"
		begin: "(\\[)(iscript)(\\])"
		beginCaptures:
			"1":
				name: "entity.name.function.kag"
			"2":
				name: "entity.name.tag.kag"
			"3":
				name: "entity.name.function.kag"
		end: "(\\[)(endscript)(\\])"
		endCaptures:
			"1":
				name: "entity.name.function.kag"
			"2":
				name: "entity.name.tag.kag"
			"3":
				name: "entity.name.function.kag"
	}
  {
    comment:"COMMENT"
    match: "(;)(?!\\[\\[).*$\\n?"
    name: "punctuation.definition.comment.kag"
  }
  {
    comment:'STRING_QUOTED_DOUBLE'
    begin: "(\")"
    beginCaptures:
      "1":
        name: "punctuation.definition.string.begin.kag"
    end: "(\")"
    endCaptures:
      "1":
        name: "punctuation.definition.string.end.kag"
    name: "string.quoted.double.kag"
  }
  {
    comment:'STRING_QUOTED_SINGLE'
    begin: "(\')"
    beginCaptures:
      "1":
        name: "punctuation.definition.string.begin.kag"
    end: "(\')"
    endCaptures:
      "1":
        name: "punctuation.definition.string.end.kag"
    name: "string.quoted.single.kag"
  }
  {
    comment:"TAG_SECTION"
    match: "((\\[)*(\\]))|(^[ \t]{0,}+@([a-zA-Z0-9_]+))"
    name: "entity.name.function.kag"
  }
  {
    comment:"TAG_COMMAND"
    match: "(\\[)([a-zA-Z0-9_]+)"
    name: "entity.name.function.kag"
  }
	{
		comment: "PARAMETER"
		match: "([\\w]+)\\s*(=)\\s*([\\w0-9-_\\.\*]{0,}+)"
		captures:
			"1":
				name: "keyword.control.kag"
			"2":
				name: "punctuation.section.tag.kag"
			"3":
				name: "string.kag"
    patterns: [
      {
        comment:'NUMBER'
        match: '\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b'
        name: 'constant.numeric.kag'
      }
    ]
	}
  {
    comment:"LABEL"
    match: "(^\\*.*?$)"
    name: "keyword.control.kag"
  }
  {
    comment:"CHAR_NAME"
    match: "(^#.*?$)"
    name: "keyword.control.kag"
  }
]
